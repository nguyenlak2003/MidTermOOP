/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package application.form;

import application.entity.GymerMember;
import application.func.CoachFunc;
import application.func.GymerFunc;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Le Van Phong Tu
 */
public class Form1 extends javax.swing.JPanel {

    /**
     * Creates new form Form1
     */
    public Form1() {
        initComponents();
        GymerFunc func = new GymerFunc();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textdobgym = new application.swing.TextFielInForm();
        textcoachgym = new application.swing.TextFielInForm();
        genderbox = new application.swing.Combobox();
        textnamegym1 = new application.swing.TextFielInForm();
        textidgym = new application.swing.TextFielInForm();
        textsdtgym = new application.swing.TextFielInForm();
        textstartday = new application.swing.TextFielInForm();
        buttonForm1 = new application.swing.ButtonForm();
        buttonForm2 = new application.swing.ButtonForm();
        texttimegym = new application.swing.TextFielInForm();
        textaddressgym = new application.swing.TextFielInForm();
        ticketbox = new application.swing.Combobox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 19)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG TIN NGƯỜI TẬP GYM");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 32, 842, 55));

        textdobgym.setLabelText("Ngày sinh");
        textdobgym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textdobgymActionPerformed(evt);
            }
        });
        add(textdobgym, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 260, 40));

        textcoachgym.setLabelText("Huấn luyện viên");
        textcoachgym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textcoachgymActionPerformed(evt);
            }
        });
        add(textcoachgym, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 480, 240, -1));

        genderbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nam", "Nữ", "Khác" }));
        genderbox.setLabeText("Giới tính");
        genderbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderboxActionPerformed(evt);
            }
        });
        add(genderbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 90, 50));

        textnamegym1.setLabelText("Họ và tên");
        textnamegym1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textnamegym1ActionPerformed(evt);
            }
        });
        add(textnamegym1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 390, -1));

        textidgym.setLabelText("ID");
        textidgym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textidgymActionPerformed(evt);
            }
        });
        add(textidgym, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 90, -1));

        textsdtgym.setLabelText("Số điện thoại");
        textsdtgym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textsdtgymActionPerformed(evt);
            }
        });
        add(textsdtgym, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 240, -1));

        textstartday.setLabelText("Ngày đăng kí");
        textstartday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textstartdayActionPerformed(evt);
            }
        });
        add(textstartday, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 230, -1));

        buttonForm1.setBackground(new java.awt.Color(203, 102, 0));
        buttonForm1.setForeground(new java.awt.Color(255, 255, 255));
        buttonForm1.setText("RESET");
        buttonForm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForm1ActionPerformed(evt);
            }
        });
        add(buttonForm1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 550, 140, 50));

        buttonForm2.setBackground(new java.awt.Color(203, 102, 0));
        buttonForm2.setForeground(new java.awt.Color(255, 255, 255));
        buttonForm2.setText("DONE");
        buttonForm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForm2ActionPerformed(evt);
            }
        });
        add(buttonForm2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 550, 140, 50));

        texttimegym.setLabelText("Thời gian đăng kí");
        texttimegym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texttimegymActionPerformed(evt);
            }
        });
        add(texttimegym, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 260, -1));

        textaddressgym.setLabelText("Địa chỉ");
        textaddressgym.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textaddressgymActionPerformed(evt);
            }
        });
        add(textaddressgym, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 240, -1));

        ticketbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vé tháng", "Vé ngày" }));
        ticketbox.setLabeText("Giới tính");
        ticketbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketboxActionPerformed(evt);
            }
        });
        add(ticketbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, 160, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void textdobgymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textdobgymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textdobgymActionPerformed

    private void textcoachgymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textcoachgymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textcoachgymActionPerformed

    private void textnamegym1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textnamegym1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textnamegym1ActionPerformed

    private void textidgymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textidgymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textidgymActionPerformed

    private void textsdtgymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textsdtgymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textsdtgymActionPerformed

    private void textstartdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textstartdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textstartdayActionPerformed

    private void buttonForm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForm1ActionPerformed
            // TODO add your handling code here:
            resetField();
    }//GEN-LAST:event_buttonForm1ActionPerformed

    private void buttonForm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForm2ActionPerformed
        
    }//GEN-LAST:event_buttonForm2ActionPerformed

    private void genderboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderboxActionPerformed

    private void texttimegymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texttimegymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texttimegymActionPerformed

    private void textaddressgymActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textaddressgymActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textaddressgymActionPerformed

    private void ticketboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ticketboxActionPerformed
   
public void setGymerInfo(GymerMember gym){
        textidgym.setText(gym.getId());
        textnamegym1.setText(gym.getName());
        if(gym.getGender().equals("Nam")){
            genderbox.setSelectedIndex(0);
        }
        if(gym.getGender().equals("Nữ")){
            genderbox.setSelectedIndex(1);
        }
        if(gym.getGender().equals("Khác")){
            genderbox.setSelectedIndex(2);
        }
        textdobgym.setText(gym.getDob());
        textaddressgym.setText(gym.getAddress());
        textsdtgym.setText(gym.getPhoneNumber());
        textstartday.setText(gym.getStartDay());
        if(gym.getTicket().equals("Vé tháng")){
            genderbox.setSelectedIndex(0);
        }
        if(gym.getGender().equals("Vé ngày")){
            genderbox.setSelectedIndex(1);
        }
        
        texttimegym.setText(String.valueOf(gym.getTime()));
        
        textcoachgym.setText(gym.getCoach());
    }
    private boolean validateID() {
        
        String id = textidgym.getText();
        if (id == null || "".equals(id.trim())) {
            textidgym.requestFocus();
            showMessage("ID không được trống.");
            return false;
        }
        
        return true;
    }
    private boolean validateName() {
        String name = textnamegym1.getText();
        if (name == null || "".equals(name.trim())) {
            textnamegym1.requestFocus();
            showMessage("Tên không được trống");
            return false;
        }
        return true;
    }
    public static boolean isInteger(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    private boolean validateGender() {
        int gen = genderbox.getSelectedIndex();
        if (gen==-1) {
            genderbox.requestFocus();
            showMessage("Chưa chọn giới tính");
            return false;
        }
        return true;
    }
    private boolean validateDob() {
        String dob = textdobgym.getText();
        if (dob == null || "".equals(dob.trim())) {
            textdobgym.requestFocus();
            showMessage("Tên không được trống");
            return false;
        }
        return true;
    }
    private boolean validateAddress() {
        String address = textaddressgym.getText();
        if (address == null || "".equals(address.trim())) {
            textsdtgym.requestFocus();
            showMessage("Địa chỉ không được trống.");
            return false;
        }
        
        return true;
    }
    private boolean validatePhone() {
        String phone = textsdtgym.getText();
        if (phone == null || "".equals(phone.trim())) {
            textsdtgym.requestFocus();
            showMessage("Số điện thoại không được trống.");
            return false;
        }
        return true;
    }
    private boolean validateStartDay() {
        String nbd = textstartday.getText();
        if (nbd == null || "".equals(nbd.trim())) {
            textstartday.requestFocus();
            showMessage("Ngày đăng kí không được trống.");
            return false;
        }
        return true;
    }
    private boolean validateTicket() {
        int gen = genderbox.getSelectedIndex();
        if (gen==-1) {
            genderbox.requestFocus();
            showMessage("Chưa chọn loại vé");
            return false;
        }
        return true;
    }
    private boolean validateCoach() {
        CoachFunc func = new CoachFunc();
        String coach = textcoachgym.getText();
        if (coach == null || "".equals(coach.trim())) {
            textcoachgym.requestFocus();
            showMessage("Huấn luyện viên không được để trống.");
            return false;
        }
        if (!func.hasCoach(coach)){
            textcoachgym.requestFocus();
            showMessage("Huấn luyện viên không tồn tại");
            return false;
        }
        return true;
    }
    
    public GymerMember getGymerInfo() {
        // validate student
        if (!validateID()|| !validateName()|| !validateGender()|| !validateDob()||!validateAddress()||!validatePhone()||!validateStartDay()||!validateTicket()||!validateCoach()) {
            return null;
        }
        try {
            CoachFunc func = new CoachFunc();
            GymerMember gym = new GymerMember();
            gym.setId(textidgym.getText());
            gym.setName(textnamegym1.getText());
            gym.setGender(genderbox.getItemAt( genderbox.getSelectedIndex()).toString());
            gym.setDob(textdobgym.getText());
            gym.setAddress(textaddressgym.getText());
            gym.setPhoneNumber(textsdtgym.getText());
            gym.setStartDay(textstartday.getText());
            gym.setTicket(ticketbox.getItemAt( genderbox.getSelectedIndex()).toString());
            gym.setTime(Integer.parseInt( texttimegym.getText().trim()));
            gym.setCoach(textcoachgym.getText());
            if(ticketbox.getSelectedIndex()==0){
                int n = Integer.parseInt( texttimegym.getText().trim())*(func.tinhTien(textcoachgym.getText())+220000);
                gym.setPrice(n);
            }else if(ticketbox.getSelectedIndex()==2){
                int n = Integer.parseInt( texttimegym.getText().trim())*250000;
                gym.setPrice(n);
            }
            return gym;
        } catch (Exception e) {
            showMessage(e.getMessage());
        }
        return null;
    }
     public GymerMember getGymerInfoFrame() {
        // validate student
        
        try {
            GymerMember gym = new GymerMember();
            gym.setId(textidgym.getText());
            gym.setName(textnamegym1.getText());
            gym.setGender(genderbox.getItemAt( genderbox.getSelectedIndex()).toString());
            gym.setDob(textdobgym.getText());
            gym.setAddress(textaddressgym.getText());
            gym.setPhoneNumber(textsdtgym.getText());
            gym.setStartDay(textstartday.getText());
          
            gym.setTicket(ticketbox.getItemAt( genderbox.getSelectedIndex()).toString());
            gym.setTime(Integer.parseInt( texttimegym.getText().trim()));
            gym.setCoach(textcoachgym.getText());
            return gym;
        } catch (Exception e) {
            showMessage(e.getMessage());
        }
        return null;
    }
    public void resetField(){
        GymerFunc func = new GymerFunc();
        
        textidgym.setText("");
        textnamegym1.setText("");
        genderbox.setSelectedIndex(-1);
        textdobgym.setText("");
        textsdtgym.setText("");
        textaddressgym.setText("");
        textstartday.setText("");
        texttimegym.setText("");
        ticketbox.setSelectedIndex(-1);
        textcoachgym.setText("");
    }
    public void addAddGymerListener(ActionListener listener) {
        System.out.println("do");
        buttonForm2.addActionListener(listener);
    }
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private application.swing.ButtonForm buttonForm1;
    private application.swing.ButtonForm buttonForm2;
    private application.swing.Combobox genderbox;
    private javax.swing.JLabel jLabel1;
    private application.swing.TextFielInForm textaddressgym;
    private application.swing.TextFielInForm textcoachgym;
    private application.swing.TextFielInForm textdobgym;
    private application.swing.TextFielInForm textidgym;
    private application.swing.TextFielInForm textnamegym1;
    private application.swing.TextFielInForm textsdtgym;
    private application.swing.TextFielInForm textstartday;
    private application.swing.TextFielInForm texttimegym;
    private application.swing.Combobox ticketbox;
    // End of variables declaration//GEN-END:variables
}
