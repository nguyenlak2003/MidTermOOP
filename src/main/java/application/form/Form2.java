/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package application.form;

import application.entity.GymerMember;
import application.func.GymerFunc;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Le Van Phong Tu
 */
public class Form2 extends javax.swing.JPanel {

    /**
     * Creates new form Form2
     */
    public Form2() {
        
        initComponents();
        GymerFunc fun = new GymerFunc();
        TongDoanhThu.setText(fun.getCountGymer()+"\n" + fun.tinhTongDoanhthu());
        sortList1.addElement("Id");
        sortList1.addElement("Tên");
        sortList1.addElement("Huấn luyện viên");
        sortList1.addElement("Giới tính");
       
        searchbox.setModel(sortList1);
        searchbox.setSelectedIndex(-1);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableColumn1 = new application.swing.TableColumn();
        buttonEdit = new application.swing.ButtonForm();
        buttonReset = new application.swing.ButtonForm();
        buttonDelete = new application.swing.ButtonForm();
        searchbox = new application.swing.Combobox();
        buttonSort = new application.swing.ButtonForm();
        buttontimkiem = new application.swing.ButtonForm();
        textFielInForm1 = new application.swing.TextFielInForm();
        TongDoanhThu = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 19)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BẢNG THÔNG TIN NGƯỜI TẬP GYM");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 842, 55));

        tableColumn1.setBackground(new java.awt.Color(255, 255, 255));
        tableColumn1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ và tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Ngày đăng kí", "Vé", "Thời gian", "HLV", "Tổng"
            }
        ));
        jScrollPane1.setViewportView(tableColumn1);
        if (tableColumn1.getColumnModel().getColumnCount() > 0) {
            tableColumn1.getColumnModel().getColumn(0).setPreferredWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 1130, -1));

        buttonEdit.setBackground(new java.awt.Color(203, 102, 0));
        buttonEdit.setForeground(new java.awt.Color(255, 255, 255));
        buttonEdit.setText("Edit");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });
        add(buttonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 130, 80, 30));

        buttonReset.setBackground(new java.awt.Color(203, 102, 0));
        buttonReset.setForeground(new java.awt.Color(255, 255, 255));
        buttonReset.setText("Reset");
        add(buttonReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 130, 80, 30));

        buttonDelete.setBackground(new java.awt.Color(203, 102, 0));
        buttonDelete.setForeground(new java.awt.Color(255, 255, 255));
        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, 80, 30));

        searchbox.setLabeText("");
        add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 110, -1));

        buttonSort.setBackground(new java.awt.Color(203, 102, 0));
        buttonSort.setForeground(new java.awt.Color(255, 255, 255));
        buttonSort.setText("Sort");
        buttonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSortActionPerformed(evt);
            }
        });
        add(buttonSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 80, 30));

        buttontimkiem.setBackground(new java.awt.Color(203, 102, 0));
        buttontimkiem.setForeground(new java.awt.Color(255, 255, 255));
        buttontimkiem.setText("Search");
        buttontimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontimkiemActionPerformed(evt);
            }
        });
        add(buttontimkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 80, 30));

        textFielInForm1.setLabelText("Nhập tìm kiếm ở đây");
        textFielInForm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFielInForm1ActionPerformed(evt);
            }
        });
        add(textFielInForm1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 180, -1));

        TongDoanhThu.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        TongDoanhThu.setForeground(new java.awt.Color(102, 153, 255));
        TongDoanhThu.setText("jLabel2");
        add(TongDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSortActionPerformed

    private void buttontimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttontimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttontimkiemActionPerformed

    private void textFielInForm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFielInForm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFielInForm1ActionPerformed
public void addDeleteGymerListener(ActionListener listener) {
        buttonDelete.addActionListener(listener);
    }
public void addSortGymerListener(ActionListener listener) {

        buttonSort.addActionListener(listener);
    }
public int getIndexSort(){
        return searchbox.getSelectedIndex();
    }
//    public void addSearchVisitListener(ActionListener listener) {
//
//        txtSearch.addActionListener(listener);
//    }
    public void addEditGymerListener(ActionListener listener) {

        buttonEdit.addActionListener(listener);
    }
    public void addSearchGymerListener(ActionListener listener) {

        buttontimkiem.addActionListener(listener);
    }
    public String timkiemString(){
        if(!textFielInForm1.getText().equals("")||textFielInForm1.getText()!=null){
           
            return textFielInForm1.getText();
            
        }
        else return null;
    }
    public void addResetListener(ActionListener listener){
        buttonReset.addActionListener(listener);
    }
//    public int getIndexSearch(){
//        return boxChoose.getSelectedIndex();
//    }
//    public String getFieldSearch(){
//        return txtSearch.getText();
//    }
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    public void showGymer(List<GymerMember> list) {
        int size = list.size();
        // với bảng studentTable có 5 cột, 
        // khởi tạo mảng 2 chiều visits, trong đó:
        // số hàng: là kích thước của list student 
        // số cột: là 5
        Object [][] gymers = new Object[size][11];
        for (int i = 0; i < size; i++) {
            gymers[i][0] = list.get(i).getId();
            gymers[i][1] = list.get(i).getName();
            //DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            gymers[i][2] = list.get(i).getGender();
            gymers[i][3] = list.get(i).getDob();
            gymers[i][4] = list.get(i).getAddress();
            gymers[i][5] = list.get(i).getPhoneNumber();
            gymers[i][6] = list.get(i).getStartDay();
            gymers[i][7] = list.get(i).getTicket();
            gymers[i][8] = list.get(i).getTime();
            gymers[i][9] = list.get(i).getCoach();
            gymers[i][10] = list.get(i).getPrice();
            
        }
        tableColumn1.setModel(new DefaultTableModel(gymers, columnNames));
    }
    public GymerMember getGymerInfo() {
        // validate student
        int row = tableColumn1.getSelectedRow();

        String Id = tableColumn1.getModel().getValueAt(row,0).toString();
        String name = tableColumn1.getModel().getValueAt(row,1).toString();
        //DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String gender = tableColumn1.getModel().getValueAt(row,2).toString();
        //LocalDateTime Date = LocalDateTime.parse(DateString,formatter);
        String dob = tableColumn1.getModel().getValueAt(row,3).toString();
        String address = tableColumn1.getModel().getValueAt(row,4).toString();
        String phone = tableColumn1.getModel().getValueAt(row,5).toString();
        String startday = tableColumn1.getModel().getValueAt(row,6).toString();
        String ticket = tableColumn1.getModel().getValueAt(row,7).toString();
        int time = Integer.parseInt(tableColumn1.getModel().getValueAt(row,8).toString());
        String coach = tableColumn1.getModel().getValueAt(row,9).toString();
        int price = Integer.parseInt(tableColumn1.getModel().getValueAt(row,10).toString());
        
        return new GymerMember(Id, name, gender, dob, address, phone, startday, ticket, time, coach, price);
    }
    private DefaultComboBoxModel searchList = new DefaultComboBoxModel();
     private DefaultComboBoxModel sortList1 = new DefaultComboBoxModel();
     private DefaultComboBoxModel sortList2 = new DefaultComboBoxModel();
    private final String [] columnNames = new String [] {
            "ID", "Họ và tên", "Giới tính", "Ngày sinh", "Địa chỉ","Số điện thoại","Ngày đăng kí", "Vé","Thời gian","Huấn luyện viên","Tổng"};

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TongDoanhThu;
    private application.swing.ButtonForm buttonDelete;
    private application.swing.ButtonForm buttonEdit;
    private application.swing.ButtonForm buttonReset;
    private application.swing.ButtonForm buttonSort;
    private application.swing.ButtonForm buttontimkiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private application.swing.Combobox searchbox;
    private application.swing.TableColumn tableColumn1;
    private application.swing.TextFielInForm textFielInForm1;
    // End of variables declaration//GEN-END:variables
}
